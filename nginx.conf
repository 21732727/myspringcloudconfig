
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

#实现图片的反向代理		转向到具体文件夹 F:\jt_load
	server {
		listen 80;
		server_name image.jt.com;
		location / {

			root F:\jt_load;	
		}
	}

	#配置负载均衡策略  1轮询
	#upstream jtLinux {
	#id_hash
		#server 192.168.219.130:8080 ;
	  #server 192.168.219.130:8081 ;
		#server 192.168.219.130:8082 ;
	#}
	 upstream jt{
	#id_hash
		server localhost:8091 weight=6 max_fails=1 fail_timeout=10s;
		server localhost:8092 weight=3 max_fails=1 fail_timeout=10s;
		server localhost:8093 weight=1 max_fails=1 fail_timeout=10s;
	}
		
	#配置后台管理服务器
	server {
		listen 80;
		server_name manage.jt.com;
		
		location / {
			#没有设定超时时间,则只能等待默认的超时时间
			proxy_pass http://localhost:8091;
			#proxy_pass http://jt;
			#proxy_pass http://jtLinux;
			#proxy_connect_timeout       3;  
			#proxy_read_timeout          3;  
			#proxy_send_timeout          3;
			
		}
	}
	
	#配置前台管理服务器台管理服务器
	server {
		listen 80;
		server_name www.jt.com;
		
		location / {
			#没有设定超时时间,则只能等待默认的超时时间
			proxy_pass http://localhost:8092;
			proxy_connect_timeout       3;  
			proxy_read_timeout          3;  
			proxy_send_timeout          3;
			
		}
	}
	#配置前台管理服务器台管理服务器
	server {
		listen 80;
		server_name sso.jt.com;
		
		location / {
			#没有设定超时时间,则只能等待默认的超时时间
			proxy_pass http://localhost:8093;
			proxy_connect_timeout       3;  
			proxy_read_timeout          3;  
			proxy_send_timeout          3;
			
		}
	}
	
	#配置前台管理服务器台管理服务器
	server {
		listen 80;
		server_name cart.jt.com;
		
		location / {
			#没有设定超时时间,则只能等待默认的超时时间
			proxy_pass http://localhost:8094;
			proxy_connect_timeout       3;  
			proxy_read_timeout          3;  
			proxy_send_timeout          3;
			
		}
	}
	#配置前台管理服务器台管理服务器
	server {
		listen 80;
		server_name order.jt.com;
		
		location / {
			#没有设定超时时间,则只能等待默认的超时时间
			proxy_pass http://localhost:8095;
			proxy_connect_timeout       3;  
			proxy_read_timeout          3;  
			proxy_send_timeout          3;
			
		}
	}
}	
